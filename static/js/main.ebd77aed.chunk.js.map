{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/CardContainer/index.js","App.js","index.js"],"names":["Card","props","className","alt","name","src","image","onClick","checkIfClicked","guessed","id","Wrapper","children","Jumbotron","message","score","best","CardContainer","App","state","gang","x","y","messageElement","document","getElementById","shuffledGang","map","a","Math","random","sort","b","setTheState","setState","member","style","color","this","key","React","Component","ReactDOM","render"],"mappings":"+2DAgBeA,MAZf,SAAcC,GACV,OACI,yBAAKC,UAAU,iDACX,yBAAKA,UAAU,iBAAiBC,IAAKF,EAAMG,KACvCC,IAAKJ,EAAMK,MACXC,QAAS,kBAAMN,EAAMO,eAAeP,EAAMQ,QAASR,EAAMS,S,MCC1DC,MAPf,SAAiBV,GACb,OACA,yBAAKC,UAAU,WAAWD,EAAMW,W,MCiCrBC,MAnCf,SAAmBZ,GACjB,OACE,yBAAKC,UAAU,gCACb,yBAAKA,UAAU,4CACb,wBAAIA,UAAU,aAAd,uBACA,wBAAIA,UAAU,QAAd,4EAIA,wBAAIA,UAAU,OACd,yBAAKA,UAAU,mDAIb,yBAAKA,UAAU,2BACb,wBAAIQ,GAAG,UAAUR,UAAU,YACxBD,EAAMa,UAGX,yBAAKZ,UAAU,qCACb,wBAAIA,UAAU,uCACX,IACD,8BACG,IADH,UAEUD,EAAMc,MAFhB,IAEuB,6BAAO,KAE9B,uCAAad,EAAMe,Y,aChBlBC,MATf,SAAuBhB,GACnB,OACI,yBAAKC,UAAU,6CACVD,EAAMW,WCmGJM,E,2MAjGbC,MAAQ,CACNJ,MAAO,EACPC,KAAM,EACNF,QAAS,0BACTM,Q,EAGFZ,eAAiB,SAACC,EAASC,GAC1B,IAC0BW,EAAGC,EADvBC,EAAiBC,SAASC,eAAe,WAMxCC,EAAe,SAAAN,GAInB,OAHiBA,EAAKO,KAAI,SAAAC,GAAC,MAAI,CAACC,KAAKC,SAAUF,MAC5CG,MAAK,SAACH,EAAGI,GAAJ,OAAUJ,EAAE,GAAKI,EAAE,MACxBL,KAAI,SAAAC,GAAC,OAAIA,EAAE,OAIVK,EAAc,SAAClB,EAAOC,EAAMF,EAASM,GACzC,EAAKc,SAAS,CACZnB,MAAOA,EACPC,KAAMA,EACNF,QAASA,EACTM,KAAMM,EAAaN,MAKvB,GAAIX,EAAS,CACX,IAAMW,EAAO,EAAKD,MAAMC,KAAKO,KAAI,SAAAQ,GAC/B,MAAO,CACLzB,GAAIyB,EAAOzB,GACXJ,MAAO6B,EAAO7B,MACdG,SAAS,MAIbwB,EAAY,EACV,EAAKd,MAAMH,KACX,YACAU,EAAaN,IAGfG,EAAea,MAAMC,MAAQ,UAExB,CAEL,IAAMjB,EAAO,EAAKD,MAAMC,KAAKO,KAAI,SAAAQ,GAC/B,OAAIA,EAAOzB,KAAOA,EACT,CACLA,GAAIyB,EAAOzB,GACXJ,MAAO6B,EAAO7B,MACdG,QAAS0B,EAAO1B,SAEN,CACZC,GAAIyB,EAAOzB,GACXJ,MAAO6B,EAAO7B,MACdG,SAAS,MAIbwB,EACG,EAAKd,MAAMJ,MAAQ,GAxDCM,EAyDL,EAAKF,MAAMH,KAzDHM,EA0DtB,EAAKH,MAAMJ,MAzDXM,IAAMC,EAAUD,EAAI,EACZA,GAwDW,UACrBK,EAAaN,IAEfG,EAAea,MAAMC,MAAQ,U,wEAIvB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEtB,MAAOuB,KAAKnB,MAAMJ,MAClBC,KAAMsB,KAAKnB,MAAMH,KACjBF,QAASwB,KAAKnB,MAAML,UACtB,kBAAC,EAAD,KACGwB,KAAKnB,MAAMC,KAAKO,KAAI,SAAAQ,GAAM,OACzB,kBAAC,EAAD,CACE3B,eAAgB,EAAKA,eACrBE,GAAIyB,EAAOzB,GACX6B,IAAKJ,EAAOzB,GACZJ,MAAO6B,EAAO7B,MACdG,QAAS0B,EAAO1B,mB,GA1FZ+B,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASnB,SAASC,eAAe,W","file":"static/js/main.ebd77aed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className=\"btn imageContainer rounded d-inline shadow-sm\">\r\n            <img className=\"rounded shadow\" alt={props.name}\r\n                src={props.image}\r\n                onClick={() => props.checkIfClicked(props.guessed, props.id)}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n    return (\r\n    <div className=\"wrapper\">{props.children}</div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron(props) {\r\n  return (\r\n    <div className=\"shadow jumbotron text-center\">\r\n      <div className=\" text-center jumbotron-content-container\">\r\n        <h1 className=\"display-4\">It's Always Clicky!</h1>\r\n        <h4 className=\"lead\">\r\n          Click on an image to earn points, but don't click on any more than\r\n          once!\r\n        </h4>\r\n        <hr className=\"hr\" />\r\n        <div className=\"navbar navbar-light container-fluid text-center\">\r\n          {/* <div className=\"brandDiv float-left\">\r\n                    <h2 className=\"d-inline float-left\">Clicky Game</h2>\r\n                </div> */}\r\n          <div className=\"messageText text-center\">\r\n            <h2 id=\"message\" className=\"d-inline\">\r\n              {props.message}\r\n            </h2>\r\n          </div>\r\n          <div className=\"scoreBoard float-right text-right\">\r\n            <h4 className=\"d-inline scoreBoardText float-right\">\r\n              {\" \"}\r\n              <span>\r\n                {\" \"}\r\n                Score: {props.score} <br />{\" \"}\r\n              </span>\r\n              <span>Best: {props.best}</span>\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction CardContainer(props) {\r\n    return (\r\n        <div className=\"cardContainer text-center container-fluid\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default CardContainer;","import React from 'react';\nimport Card from './components/Card';\nimport Wrapper from './components/Wrapper';\nimport Jumbotron from './components/Jumbotron';\nimport gang from './gang.json';\nimport CardContainer from './components/CardContainer';\n\nclass App extends React.Component {\n\n  state = {\n    score: 0,\n    best: 0,\n    message: \"Click an image to begin\",\n    gang\n  }\n\n  checkIfClicked = (guessed, id) => {\n   const messageElement = document.getElementById(\"message\")\n    const updateBestScore = (x, y) => {\n      if (x === y) return x + 1\n      else return x\n    }\n\n    const shuffledGang = gang => {\n      const shuffled = gang.map(a => [Math.random(), a])\n        .sort((a, b) => a[0] - b[0])\n        .map(a => a[1]);\n      return shuffled\n    }\n\n    const setTheState = (score, best, message, gang) => {\n      this.setState({\n        score: score,\n        best: best,\n        message: message,\n        gang: shuffledGang(gang)\n\n      })\n    }\n\n    if (guessed) {\n      const gang = this.state.gang.map(member => {\n        return {\n          id: member.id,\n          image: member.image,\n          guessed: false\n        }\n      })\n\n      setTheState(0, \n        this.state.best,\n        \"INCORRECT\",\n        shuffledGang(gang)\n      );\n\n      messageElement.style.color = \"red\";\n        \n    } else {\n\n      const gang = this.state.gang.map(member => {\n        if (member.id !== id) {\n          return {\n            id: member.id,\n            image: member.image,\n            guessed: member.guessed\n          }\n        } else return {\n          id: member.id,\n          image: member.image,\n          guessed: true\n        }\n      });  \n\n      setTheState(\n        (this.state.score + 1),\n        updateBestScore(this.state.best,\n          this.state.score), \"CORRECT\",\n        shuffledGang(gang)\n      );\n      messageElement.style.color = \"green\";\n    };\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron\n          score={this.state.score}\n          best={this.state.best}\n          message={this.state.message} />\n        <CardContainer>\n          {this.state.gang.map(member => (\n            <Card\n              checkIfClicked={this.checkIfClicked}\n              id={member.id}\n              key={member.id}\n              image={member.image}\n              guessed={member.guessed}\n            />\n          ))}\n        </CardContainer>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}